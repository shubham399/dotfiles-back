export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="agnoster"
plugins=(git)

function getCurrContext() {
  CTX=$(kubectl config current-context 2>/dev/null | awk -F'-' '{print $2}');
  NAMESPACE=$( kubectl config view --minify --output 'jsonpath={..namespace}')
  if [[ -n "$CTX" ]];
  then
    CTX="<$CTX> %{$FG[032]%}<$NAMESPACE> "
    echo "$CTX"
  else
    echo ""
  fi
}

source $ZSH/oh-my-zsh.sh
source ~/.alias

export NVM_BIN=$HOME/.nvm/versions/node/v8.12.0/bin
export NVM_CD_FLAGS=-q
export NVM_DIR=$HOME/.nvm
export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#fzf - fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
if [ -z "$TMUX" ]
then
    tmux new-session -A -s main
fi

bash -c "~/.scripts/loadkeys.sh"
if [ /usr/local/bin/kubectl ]; then source <(kubectl completion zsh); fi 2>/dev/null
for file in $(find ~/.secrets -type f); do source $file > /dev/null; done
export PATH="~/.pyenv/shims:${PATH}"
export PYENV_SHELL=zsh
source '~/.pyenv/libexec/../completions/pyenv.zsh'
command pyenv rehash 2>/dev/null
pyenv() {
  local command
  command="${1:-}"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  rehash|shell)
    eval "$(pyenv "sh-$command" "$@")";;
  *)
    command pyenv "$command" "$@";;
  esac
}

CONTEXT="%{$FG[011]%}\$(getCurrContext 2>/dev/null)%{$reset_color%}"
export PROMPT="$CONTEXT$PROMPT"
export EDITOR=nvim
