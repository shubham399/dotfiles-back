export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="agnoster"
#zplug "MichaelAquilina/zsh-you-should-use"
plugins=(git you-should-use)

function getCurrContext() {
  CTX=$(kubectl config current-context 2>/dev/null | awk -F'-' '{print $2}');
  NAMESPACE=$( kubectl config view --minify --output 'jsonpath={..namespace}')
  if [[ -n "$CTX" ]];
  then
    CTX="<$CTX> %{$FG[032]%}<$NAMESPACE> "
    echo "$CTX"
  else
    echo ""
  fi
}

source $ZSH/oh-my-zsh.sh
source ~/.alias

export NVM_BIN=$HOME/.nvm/versions/node/v8.12.0/bin
export NVM_CD_FLAGS=-q
export NVM_DIR=$HOME/.nvm
export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#fzf - fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
if [ -z "$TMUX" ]
then
    tmux new-session -A -s main
fi

bash -c "~/.scripts/loadkeys.sh"
if [ /usr/local/bin/kubectl ]; then source <(kubectl completion zsh); fi 2>/dev/null
for file in $(find ~/.secrets -type f); do source $file > /dev/null; done
CONTEXT="%{$FG[011]%}\$(getCurrContext 2>/dev/null)%{$reset_color%}"
NEWLINE=$'\n'
export PROMPT="$CONTEXT$PROMPT${NEWLINE}> "
export EDITOR=nvim
export PATH=$PATH:/opt/istio-1.4.3/bin
export PATH="${PATH}:${HOME}/.krew/bin"
export YSU_HARDCORE=1
setopt HIST_IGNORE_ALL_DUPS
#export MORPHEUS_DB_PORT=5423 # to Set the DB PORT
#export REDIS_PORT=6397 # to Set the Redis PORT
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    #echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
